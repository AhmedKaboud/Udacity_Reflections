Q. When would you want to use a remote repository rather than keeping all your work local?
A.I need to use remote repository when i collaborate with  team in one projectand need to share the latest version between us and if i need to work on one project from different computers. Also, when i need to share my code with another one. and using remote repository represents a backup to the local project, so i can get it if my PC blows up.

Q. Why might you want to always pull changes manually rather than having Gitautomatically stay up-to-date with your remote repository?
A. I may not need these changes from other contributer to be locally because i work on another diferent feature Or may be the local more updated than remote repo.

Q. Describe the differences between forks, clones, and branches.  When would you use one instead of another?
A. Forks -> means to copy the repo in GitHub another repo on GitHub location.
Clone -> to copy the repo from remote repo on Github to your local repo or to copy the local repo to another place in the local machine.
brnches -> to make another path of the repo to modify it without modifing the origial version or to work in a team each one work on branch and merge them later.

Q. What is the benefit of having a copy of the last known state of the remote stored locally?
A. we can keep up to date with last version without any effect on our local repo. then, if you be ready, just you will do merge.

Q. How would you collaborate without using Git or GitHub?  What would be easier, and what would be harder?
A. We can use any shared folder to share our projectand each one work on one part. I there is an overlap at the same time, there will be a bug. But this solution is taugh and we can't track the history of edits of each file in the project. We should discuss the changes by email or another method to be sure that everything go well.

When would you want to make changes in a separate branch rather than directly in master?  What benefits does each approach have?

    Fill in your answer here